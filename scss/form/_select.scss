/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

On the spot animations

*/

@keyframes bsSelectDropdownAnimation {
    0% {
        opacity: 0;
        transform: translate(0,$select-dropdown-animation-initial-translate-y);

    }
    100% {
        opacity: 1;
        transform: translate(0,0);
    }
}


// this is a quick and dirty solution to fight the bootstrap-select loading jumping bloody effect
select.selectpicker {
    display: inline-block !important;
    position: static !important;
    height: $select-placeholder-height-xs !important;
    opacity: 0 !important;
    visibility: hidden !important;
    @include media-breakpoint-up(md) {
        height: $select-placeholder-height-md !important;
    }
    @include media-breakpoint-up(xxl) {
        height: $select-placeholder-height-xxl !important;
    }
    // when rendered, we're in the .bootstrap-select container, hide!
    .bootstrap-select & {
        position: absolute !important;
        top: 0 !important;
        bottom: auto !important;
    }
}

.bootstrap-select {
    // we don't want to default arrow
    .bs-caret {
        display: none;
    }
    > .dropdown-toggle {
        width: auto;
        min-width: $dropdown-min-width;
        padding-right: $dropdown-toggle-padding-right;
        padding-left: $dropdown-toggle-padding-left;
        color: map-deep-get($btn-variations,$select-btn-variation,'color') !important;
        background-color: map-deep-get($btn-variations,$select-btn-variation,'bg') !important;
        box-shadow: none !important;
        z-index: 10;
        // on mobile devices, remove min width
        @include media-breakpoint-down(1) {
            min-width: 0;
        }
        &:focus {
            outline: none !important; // I appologise, dear accessibility
        }
        &:hover,
        &:focus,
        &:active {
            color: map-deep-get($btn-variations,$select-btn-variation,'color-hover') !important;
            background-color: map-deep-get($btn-variations,$select-btn-variation,'bg-hover') !important;
            border-top-color: map-deep-get($btn-variations,$select-btn-variation,'border-top-color-hover') !important;
            border-right-color: map-deep-get($btn-variations,$select-btn-variation,'border-right-color-hover') !important;
            border-bottom-color: map-deep-get($btn-variations,$select-btn-variation,'border-bottom-color-hover') !important;
            border-left-color: map-deep-get($btn-variations,$select-btn-variation,'border-left-color-hover') !important;
        }
        &:before {
            @include icomoon();
            content: $dropdown-toggle-icon;
            position: absolute;
            top: 50%;
            line-height: 0;
            width: auto; // TBD: If not set, icon jumps
            right: $dropdown-toggle-icon-spacing-right;
            left: $dropdown-toggle-icon-spacing-left;
            transition: transform $select-dropdown-animation-duration $select-dropdown-animation-timing-function;
            transform: translateY(-50%) rotate(0deg);
        }
        &.toggle-initialized {
            white-space: normal;
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Dropdown Menu

    */

    > .dropdown-menu {
        // sizing and styles
        min-width: $dropdown-min-width !important; // I hate to do this, but because the default styles uses a very specific structure, I was forced to. This can of cousre be overwritten in a different context
        padding: 0;
        border-style: $dropdown-border-style;
        border-width: $dropdown-border-width;
        border-color: $dropdown-border-color;
        border-radius: $dropdown-border-radius;
        // when dropdown opens below, there's an ugly gap
        margin-bottom: 0;
        @if $dropdown-border-top == false {
            border-top: none;
        }
        a {
            outline: none;
            padding: $dropdown-link-padding;
        }
        // selected list item
        .selected {
            a {
                background-color: $dropdown-link-active-bg;
            }
            .text {
                color: $dropdown-link-active-color;
                @if $dropdown-link-active-underline-enabled {
                    text-decoration: underline;
                }
            }
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Opened State

    */

    // I hate to be so specific, but we need to be stronger than the default dropdown styles
    &.open {
        > .dropdown-toggle {
            &,
            &:hover,
            &:focus,
            &:active {
                color: map-deep-get($btn-variations,$select-btn-variation,'color') !important;
                background-color: map-deep-get($btn-variations,$select-btn-variation,'bg') !important;
                border-top-color: map-deep-get($btn-variations,$select-btn-variation,'border-top-color') !important;
                border-right-color: map-deep-get($btn-variations,$select-btn-variation,'border-right-color') !important;
                border-bottom-color: map-deep-get($btn-variations,$select-btn-variation,'border-bottom-color') !important;
                border-left-color: map-deep-get($btn-variations,$select-btn-variation,'border-left-color') !important;
            }
            // arrow
            &:before {
                transform: translateY(-50%) rotate(180deg);
            }
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    When assigning dropdown to another container (e.g. body) we can't
    work with transition (because element doesn't exist on page load).
    We have to use an animation instead.

    */

    > .dropdown-menu {
        @if $select-dropdown-animation-enabled {
            opacity: 0;
            &.animate {
                animation-name: bsSelectDropdownAnimation;
                animation-duration: $select-dropdown-animation-duration;
                animation-timing-function: $select-dropdown-animation-timing-function;
                animation-fill-mode: forwards;
            }
        }
    }

}

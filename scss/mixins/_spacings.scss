/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Spacings of content blocks within the .site-content

*/

// in default 'content' placeholder

@mixin content-section-spacing-padding() {
    @include spacings-size($content-section-spacing, padding);
}

@mixin content-section-spacing-margin() {
    @include spacings-size($content-section-spacing, margin-top);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

App Detail

*/

// main container within softpage
@mixin app-detail-softpage-spacing() {
    padding: $app-detail-softpage-spacing-xs;

    @include media-breakpoint-up(sm) {
        padding: $app-detail-softpage-spacing-sm;
    }

    @include media-breakpoint-up(md) {
        padding: $app-detail-softpage-spacing-md;
    }

    @include media-breakpoint-up(lg) {
        padding: $app-detail-softpage-spacing-lg;
    }

    @include media-breakpoint-up(xl) {
        padding: $app-detail-softpage-spacing-xl;
    }

    @include media-breakpoint-up(xxl) {
        padding: $app-detail-softpage-spacing-xxl;
    }
}

// header section
@mixin app-detail-header-section-spacing($property: margin) {
    // reset first
    padding: 0;
    margin: 0;

    @if $app-detail-header-section-spacing-top {
        @include spacings-size($app-detail-header-section-spacing-top, #{$property}-top);
    }

    @if $app-detail-header-section-spacing-bottom {
        @include spacings-size($app-detail-header-section-spacing-bottom, #{$property}-bottom);
    }
}

// heading container
@mixin app-detail-heading-container-spacing-bottom() {
    // add spacing
    @if $app-detail-heading-container-spacing-bottom {
        @include spacings-size($app-detail-heading-container-spacing-bottom, margin-bottom);
    }
}

// lead (spacing to next element)
@mixin app-detail-spacing-between-lead-and-content() {
    // add spacing
    @if $app-detail-spacing-between-lead-and-content {
        @include spacings-size($app-detail-spacing-between-lead-and-content, margin-top);
    }
}

// created
@mixin app-detail-created-spacing-top() {
    // add spacing
    @if $app-detail-created-spacing-top {
        @include spacings-size($app-detail-created-spacing-top, margin-top);
    }
}

@mixin app-detail-content-section-spacing-padding() {
    @if $app-detail-content-section-spacing {
        @include spacings-size($app-detail-content-section-spacing, padding);
    }
}

@mixin app-detail-content-section-spacing-margin() {
    @if $app-detail-content-section-spacing {
        @include spacings-size($app-detail-content-section-spacing, margin);
    }
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Content Section: Stacked columns

*/

@mixin content-plugin-stacked-col-spacing() {
    @include spacings-size($content-plugin-stacked-col-spacing, margin-bottom);
}

@mixin content-plugin-stacked-col-container-negative-spacing() {
    @include spacings-size($content-plugin-stacked-col-spacing, margin-bottom, $negative: true);
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Position of absolutely positioned elements (e.g. a text within a parallax)

*/

@mixin content-section-spacing-position($position: bottom) {
    @include spacings-size($overlay-spacing, $position);
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Overall spacings rules

Each spacing must have a min (below 320px) and a max size (above 1760px). In-between in gets calculated fluidly

*/

@mixin spacings-size($spacings-size, $property: null, $spacings-map: $spacings-sizes, $spacings-breakpoints: $fluid-breakpoints, $negative: false) {
    @include fluid-size($spacings-size, $property, $spacings-map, $spacings-breakpoints, $negative);
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Generate spacing classes for content-section plugin

Example:
.content-section.y-section-1 {
    ...
}
.content-section.y-section-1-top {
    ...
}
.content-section.y-section-1-bottom {
    ...
}

*/
@mixin generate-spacings() {
    @each $spacing-name, $spacings-breakpoint in $spacings-sizes {
        &.#{$spacing-name} {
            @include spacings-size($spacing-name, margin);
        }
        &.#{$spacing-name}-top {
            @include spacings-size($spacing-name, margin-top);
        }
        &.#{$spacing-name}-bottom {
            @include spacings-size($spacing-name, margin-bottom);
        }
    }
}

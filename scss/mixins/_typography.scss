/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

General Font Styles

*/

@mixin font-family-bold() {
    font-family: $font-family-bold;
    font-weight: normal;
}

@mixin font-family-italic() {
    font-family: $font-family-italic;
    font-weight: normal;
    font-style: normal;
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Font mixins

*/

@mixin font-default() {
    letter-spacing: $font-default-letter-spacing;
    text-transform: $font-default-text-transform;
    font-family: $font-default-font-family;
    font-weight: $font-default-font-weight;
    @include font-size($font-default-font-sizes);
    @include hyphens();
    @include text-crop($font-default-crop-top, $font-default-crop-bottom);
    @if $font-default-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-small() {
    letter-spacing: $font-small-letter-spacing;
    text-transform: $font-small-text-transform;
    font-family: $font-small-font-family;
    font-weight: $font-small-font-weight;
    @include font-size($font-small-font-sizes);
    @include hyphens();
    @include text-crop($font-small-crop-top, $font-small-crop-bottom);
    @if $font-small-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-lead() {
    letter-spacing: $font-lead-letter-spacing;
    text-transform: $font-lead-text-transform;
    font-family: $font-lead-font-family;
    font-weight: $font-lead-font-weight;
    @include font-size($font-lead-font-sizes);
    @include hyphens();
    @include text-crop($font-lead-crop-top, $font-lead-crop-bottom);
    @if $font-lead-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-btn-default() {
    letter-spacing: $font-btn-default-letter-spacing;
    text-transform: $font-btn-default-text-transform;
    font-family: $font-btn-default-font-family;
    font-weight: $font-btn-default-font-weight;
    @include font-size($font-btn-default-font-sizes);
    @include hyphens();
    @if $font-btn-default-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-btn-small() {
    letter-spacing: $font-btn-small-letter-spacing;
    text-transform: $font-btn-small-text-transform;
    font-family: $font-btn-small-font-family;
    font-weight: $font-btn-small-font-weight;
    @include font-size($font-btn-small-font-sizes);
    @include hyphens();
    @if $font-btn-small-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-btn-large() {
    letter-spacing: $font-btn-large-letter-spacing;
    text-transform: $font-btn-large-text-transform;
    font-family: $font-btn-large-font-family;
    font-weight: $font-btn-large-font-weight;
    @include font-size($font-btn-large-font-sizes);
    @include hyphens();
    @if $font-btn-large-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-input-default() {
    letter-spacing: $font-input-letter-spacing;
    text-transform: $font-input-text-transform;
    font-family: $font-input-font-family;
    font-weight: $font-input-font-weight;
    @include font-size($font-input-font-sizes);
    @include hyphens();
    @if $font-input-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-h1() {
    letter-spacing: $font-h1-letter-spacing;
    text-transform: $font-h1-text-transform;
    font-family: $font-h1-font-family;
    font-weight: $font-h1-font-weight;
    @include font-size($font-h1-font-sizes);
    @include hyphens();
    @include text-crop($font-h1-crop-top, $font-h1-crop-bottom);
    @if $font-h1-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-h2() {
    letter-spacing: $font-h2-letter-spacing;
    text-transform: $font-h2-text-transform;
    font-family: $font-h2-font-family;
    font-weight: $font-h2-font-weight;
    @include font-size($font-h2-font-sizes);
    @include hyphens();
    @include text-crop($font-h2-crop-top, $font-h2-crop-bottom);
    @if $font-h2-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-h3() {
    letter-spacing: $font-h3-letter-spacing;
    text-transform: $font-h3-text-transform;
    font-family: $font-h3-font-family;
    font-weight: $font-h3-font-weight;
    @include font-size($font-h3-font-sizes);
    @include hyphens();
    @include text-crop($font-h3-crop-top, $font-h3-crop-bottom);
    @if $font-h3-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-h4() {
    letter-spacing: $font-h4-letter-spacing;
    text-transform: $font-h4-text-transform;
    font-family: $font-h4-font-family;
    font-weight: $font-h4-font-weight;
    @include font-size($font-h4-font-sizes);
    @include hyphens();
    @include text-crop($font-h4-crop-top, $font-h4-crop-bottom);
    @if $font-h4-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-h5() {
    letter-spacing: $font-h5-letter-spacing;
    text-transform: $font-h5-text-transform;
    font-family: $font-h5-font-family;
    font-weight: $font-h5-font-weight;
    @include font-size($font-h5-font-sizes);
    @include hyphens();
    @include text-crop($font-h5-crop-top, $font-h5-crop-bottom);
    @if $font-h5-antialiased-enabled == true {
        @include antialiased();
    }
}

@mixin font-h6() {
    letter-spacing: $font-h6-letter-spacing;
    text-transform: $font-h6-text-transform;
    font-family: $font-h6-font-family;
    font-weight: $font-h6-font-weight;
    @include font-size($font-h6-font-sizes);
    @include hyphens();
    @include text-crop($font-h6-crop-top, $font-h6-crop-bottom);
    @if $font-h6-antialiased-enabled == true {
        @include antialiased();
    }
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Responsive Font Size mixin

*/

@mixin font-size($fs-map, $fs-breakpoints: $font-size-breakpoints) {
    // scale font-sizes fluidly
    // https://codepen.io/depone/pen/pEbOVm
    $min-font-size: nth(map-get($fs-map, 'min'), 1);

    font-size: $min-font-size;
    @include line-height($fs-map, $fs-breakpoints);

    // if no max font-size exists, use min font-size (i.e. font-default)
    @if map-get($fs-map, 'max') {
        $max-font-size: nth(map-get($fs-map, 'max'), 1);
        $difference: strip-unit($max-font-size - $min-font-size);
        $min-breakpoint: map-get($fs-breakpoints, 'min');
        $max-breakpoint: map-get($fs-breakpoints, 'max');

        @media (min-width: $min-breakpoint) {
            font-size: calc(#{$min-font-size} + #{$difference} * (100vw - #{$min-breakpoint}) / 100);
        }
        @media (min-width: $max-breakpoint) {
            font-size: $max-font-size;
        }
    }
}

// utility function to strip the unit from a property value (10px -> 10)
// https://css-tricks.com/snippets/sass/strip-unit-function/
@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

@mixin line-height($fs-map, $fs-breakpoints: $font-size-breakpoints) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {
        @if $fs-breakpoint == null {
            @include make-line-height($fs-font-size);
        }
        @else {
            // If $fs-font-size is a key that exists in
            // $fs-breakpoints, use the value
            @if map-has-key($fs-breakpoints, $fs-breakpoint) {
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }
            @media screen and (min-width: $fs-breakpoint) {
                @include make-line-height($fs-font-size);
            }
        }
    }
}

// Utility function for mixin font-size-fluid
@mixin make-line-height($fs-font-size) {
    // If $fs-font-size is a list, include line-height
    @if type-of($fs-font-size) == "list" {
        @if (length($fs-font-size) > 1) {
            line-height: nth($fs-font-size, 2);
        }
    }
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Antiialiasing

*/

@mixin antialiased() {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin no-antialiased() {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Hyphenation

*/

@mixin hyphens($mode: auto) {
    -webkit-hyphens: $mode;
    -moz-hyphens: $mode;
    -ms-hyphens: $mode; // IE10+
    -o-hyphens: $mode;
    hyphens: $mode;
    overflow-wrap: break-word;
    word-wrap: break-word;
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Text Cropping

http://text-crop.eightshapes.com

*/

@mixin text-crop($crop-top: 0em, $crop-bottom: 0em) {
    &:before,
    &:after {
        content: '';
        display: block;
        height: 0;
        width: 0;
    }
    &:before {
        margin-top: -$crop-top;
    }
    &:after {
        margin-bottom: -$crop-bottom;
    }
}
